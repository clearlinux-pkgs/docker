From 5b6a8841bc2f1c78f8343cdf41cabd145789854e Mon Sep 17 00:00:00 2001

From: Geronimo Orozco <geronimo.orozco@intel.com>
Date: 2016-08-09 12:27:35 -0500

Subject: [PATCH] two-systemd-files to start docker with proper runtime

Adding two systemd files to launch the proper runtime by default per
system. If the system supports virtualization /dev/kvm it will set the
default runtime to cor, if not it will set runc as default.

Signed-off-by: Geronimo Orozco <geronimo.orozco@intel.com>
---
 contrib/init/systemd/docker-cor.service |   30 ++++++++++++++++++++++++++++++
 contrib/init/systemd/docker-cor.socket  |   13 +++++++++++++
 contrib/init/systemd/docker.service     |    5 +++--
 contrib/init/systemd/docker.socket      |    1 +
 4 files changed, 47 insertions(+), 2 deletions(-)
 create mode 100644 contrib/init/systemd/docker-cor.service
 create mode 100644 contrib/init/systemd/docker-cor.socket

diff --git a/contrib/init/systemd/docker-cor.service b/contrib/init/systemd/docker-cor.service
new file mode 100644
index 0000000..a8f79c3
--- /dev/null
+++ b/contrib/init/systemd/docker-cor.service
@@ -0,0 +1,30 @@
+[Unit]
+Description=Docker Application Container Engine
+Documentation=https://docs.docker.com
+ConditionPathExists=/dev/kvm
+After=network.target docker-cor.socket
+Requires=docker-cor.socket
+
+[Service]
+Type=notify
+# the default is not to use systemd for cgroups because the delegate issues still
+# exists and systemd currently does not support the cgroup feature set required
+# for containers run by docker
+ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay --add-runtime cor=cc-oci-runtime --default-runtime=cor
+ExecReload=/bin/kill -s HUP $MAINPID
+# Having non-zero Limit*s causes performance problems due to accounting overhead
+# in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
+LimitNPROC=infinity
+LimitCORE=infinity
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
+TasksMax=infinity
+TimeoutStartSec=0
+# set delegate yes so that systemd does not reset the cgroups of docker containers
+Delegate=yes
+# kill only the docker process, not all processes in the cgroup
+KillMode=process
+
+[Install]
+WantedBy=multi-user.target
diff --git a/contrib/init/systemd/docker-cor.socket b/contrib/init/systemd/docker-cor.socket
new file mode 100644
index 0000000..5c90988
--- /dev/null
+++ b/contrib/init/systemd/docker-cor.socket
@@ -0,0 +1,13 @@
+[Unit]
+Description=Docker Socket for the API
+ConditionPathExists=/dev/kvm
+PartOf=docker-cor.service
+
+[Socket]
+ListenStream=/var/run/docker.sock
+SocketMode=0660
+SocketUser=root
+SocketGroup=docker
+
+[Install]
+WantedBy=sockets.target
diff --git a/contrib/init/systemd/docker.service b/contrib/init/systemd/docker.service
index c3f3472..16dddbd 100644
--- a/contrib/init/systemd/docker.service
+++ b/contrib/init/systemd/docker.service
@@ -1,6 +1,7 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
+ConditionPathExists=!/dev/kvm
 After=network.target docker.socket
 Requires=docker.socket
 
@@ -9,7 +10,7 @@ Type=notify
 # the default is not to use systemd for cgroups because the delegate issues still
 # exists and systemd currently does not support the cgroup feature set required
 # for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd://
+ExecStart=/usr/bin/dockerd -H fd:// --storage-driver=overlay --add-runtime cor=cc-oci-runtime --default-runtime=runc
 ExecReload=/bin/kill -s HUP $MAINPID
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -18,7 +19,7 @@ LimitNPROC=infinity
 LimitCORE=infinity
 # Uncomment TasksMax if your systemd version supports it.
 # Only systemd 226 and above support this version.
-#TasksMax=infinity
+TasksMax=infinity
 TimeoutStartSec=0
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
diff --git a/contrib/init/systemd/docker.socket b/contrib/init/systemd/docker.socket
index 7dd9509..04b69ab 100644
--- a/contrib/init/systemd/docker.socket
+++ b/contrib/init/systemd/docker.socket
@@ -1,5 +1,6 @@
 [Unit]
 Description=Docker Socket for the API
+ConditionPathExists=!/dev/kvm
 PartOf=docker.service
 
 [Socket]
